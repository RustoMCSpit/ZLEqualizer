// Copyright (C) 2023 - zsliu98
// This file is part of ZLEqualizer
//
// ZLEqualizer is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
//
// ZLEqualizer is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with ZLEqualizer. If not, see <https://www.gnu.org/licenses/>.

#ifndef ZLEQUALIZER_SINGLE_FILTER_HPP
#define ZLEQUALIZER_SINGLE_FILTER_HPP

#include <juce_audio_processors/juce_audio_processors.h>
#include <juce_dsp/juce_dsp.h>
#include "coeff/design_filter.hpp"

namespace zlIIR {
    /** stl does not support constexpr log/pow, np.logspace(1, np.log10(20000), 200) */
    constexpr std::array<double, 800> frequencies = {1.00000000e+01, 1.00955841e+01, 1.01920819e+01, 1.02895020e+01,
       1.03878533e+01, 1.04871447e+01, 1.05873851e+01, 1.06885837e+01,
       1.07907496e+01, 1.08938920e+01, 1.09980203e+01, 1.11031439e+01,
       1.12092724e+01, 1.13164152e+01, 1.14245822e+01, 1.15337830e+01,
       1.16440277e+01, 1.17553261e+01, 1.18676883e+01, 1.19811246e+01,
       1.20956451e+01, 1.22112603e+01, 1.23279805e+01, 1.24458164e+01,
       1.25647787e+01, 1.26848780e+01, 1.28061253e+01, 1.29285315e+01,
       1.30521078e+01, 1.31768652e+01, 1.33028151e+01, 1.34299689e+01,
       1.35583380e+01, 1.36879342e+01, 1.38187691e+01, 1.39508546e+01,
       1.40842026e+01, 1.42188253e+01, 1.43547346e+01, 1.44919431e+01,
       1.46304631e+01, 1.47703071e+01, 1.49114877e+01, 1.50540179e+01,
       1.51979104e+01, 1.53431783e+01, 1.54898347e+01, 1.56378929e+01,
       1.57873663e+01, 1.59382685e+01, 1.60906130e+01, 1.62444137e+01,
       1.63996845e+01, 1.65564395e+01, 1.67146927e+01, 1.68744587e+01,
       1.70357517e+01, 1.71985864e+01, 1.73629776e+01, 1.75289401e+01,
       1.76964889e+01, 1.78656393e+01, 1.80364064e+01, 1.82088058e+01,
       1.83828531e+01, 1.85585639e+01, 1.87359543e+01, 1.89150403e+01,
       1.90958381e+01, 1.92783639e+01, 1.94626345e+01, 1.96486664e+01,
       1.98364764e+01, 2.00260816e+01, 2.02174992e+01, 2.04107464e+01,
       2.06058407e+01, 2.08027998e+01, 2.10016415e+01, 2.12023839e+01,
       2.14050450e+01, 2.16096432e+01, 2.18161971e+01, 2.20247253e+01,
       2.22352467e+01, 2.24477803e+01, 2.26623455e+01, 2.28789615e+01,
       2.30976480e+01, 2.33184249e+01, 2.35413120e+01, 2.37663295e+01,
       2.39934979e+01, 2.42228376e+01, 2.44543695e+01, 2.46881144e+01,
       2.49240936e+01, 2.51623284e+01, 2.54028403e+01, 2.56456511e+01,
       2.58907828e+01, 2.61382575e+01, 2.63880978e+01, 2.66403261e+01,
       2.68949653e+01, 2.71520385e+01, 2.74115688e+01, 2.76735799e+01,
       2.79380954e+01, 2.82051392e+01, 2.84747355e+01, 2.87469088e+01,
       2.90216836e+01, 2.92990848e+01, 2.95791375e+01, 2.98618671e+01,
       3.01472991e+01, 3.04354594e+01, 3.07263741e+01, 3.10200694e+01,
       3.13165720e+01, 3.16159087e+01, 3.19181066e+01, 3.22231930e+01,
       3.25311956e+01, 3.28421421e+01, 3.31560608e+01, 3.34729801e+01,
       3.37929287e+01, 3.41159354e+01, 3.44420296e+01, 3.47712407e+01,
       3.51035985e+01, 3.54391332e+01, 3.57778750e+01, 3.61198547e+01,
       3.64651031e+01, 3.68136516e+01, 3.71655316e+01, 3.75207751e+01,
       3.78794141e+01, 3.82414812e+01, 3.86070090e+01, 3.89760307e+01,
       3.93485797e+01, 3.97246896e+01, 4.01043945e+01, 4.04877289e+01,
       4.08747273e+01, 4.12654247e+01, 4.16598567e+01, 4.20580587e+01,
       4.24600670e+01, 4.28659178e+01, 4.32756479e+01, 4.36892944e+01,
       4.41068946e+01, 4.45284865e+01, 4.49541081e+01, 4.53837980e+01,
       4.58175951e+01, 4.62555385e+01, 4.66976680e+01, 4.71440235e+01,
       4.75946455e+01, 4.80495748e+01, 4.85088524e+01, 4.89725200e+01,
       4.94406195e+01, 4.99131933e+01, 5.03902842e+01, 5.08719353e+01,
       5.13581902e+01, 5.18490929e+01, 5.23446879e+01, 5.28450200e+01,
       5.33501345e+01, 5.38600770e+01, 5.43748938e+01, 5.48946315e+01,
       5.54193370e+01, 5.59490578e+01, 5.64838420e+01, 5.70237378e+01,
       5.75687942e+01, 5.81190604e+01, 5.86745863e+01, 5.92354222e+01,
       5.98016188e+01, 6.03732273e+01, 6.09502995e+01, 6.15328875e+01,
       6.21210442e+01, 6.27148228e+01, 6.33142769e+01, 6.39194608e+01,
       6.45304293e+01, 6.51472378e+01, 6.57699419e+01, 6.63985981e+01,
       6.70332633e+01, 6.76739948e+01, 6.83208507e+01, 6.89738896e+01,
       6.96331704e+01, 7.02987529e+01, 7.09706974e+01, 7.16490645e+01,
       7.23339158e+01, 7.30253132e+01, 7.37233192e+01, 7.44279971e+01,
       7.51394105e+01, 7.58576239e+01, 7.65827024e+01, 7.73147114e+01,
       7.80537172e+01, 7.87997868e+01, 7.95529877e+01, 8.03133879e+01,
       8.10810563e+01, 8.18560625e+01, 8.26384764e+01, 8.34283690e+01,
       8.42258117e+01, 8.50308768e+01, 8.58436369e+01, 8.66641657e+01,
       8.74925375e+01, 8.83288273e+01, 8.91731106e+01, 9.00254639e+01,
       9.08859644e+01, 9.17546899e+01, 9.26317190e+01, 9.35171311e+01,
       9.44110064e+01, 9.53134257e+01, 9.62244706e+01, 9.71442238e+01,
       9.80727683e+01, 9.90101882e+01, 9.99565684e+01, 1.00911994e+02,
       1.01876553e+02, 1.02850331e+02, 1.03833417e+02, 1.04825899e+02,
       1.05827868e+02, 1.06839415e+02, 1.07860630e+02, 1.08891606e+02,
       1.09932437e+02, 1.10983217e+02, 1.12044040e+02, 1.13115003e+02,
       1.14196203e+02, 1.15287737e+02, 1.16389705e+02, 1.17502206e+02,
       1.18625340e+02, 1.19759210e+02, 1.20903918e+02, 1.22059567e+02,
       1.23226263e+02, 1.24404110e+02, 1.25593216e+02, 1.26793688e+02,
       1.28005634e+02, 1.29229165e+02, 1.30464390e+02, 1.31711423e+02,
       1.32970375e+02, 1.34241360e+02, 1.35524494e+02, 1.36819893e+02,
       1.38127674e+02, 1.39447955e+02, 1.40780856e+02, 1.42126498e+02,
       1.43485002e+02, 1.44856490e+02, 1.46241088e+02, 1.47638921e+02,
       1.49050114e+02, 1.50474797e+02, 1.51913097e+02, 1.53365145e+02,
       1.54831072e+02, 1.56311011e+02, 1.57805096e+02, 1.59313462e+02,
       1.60836246e+02, 1.62373585e+02, 1.63925619e+02, 1.65492487e+02,
       1.67074333e+02, 1.68671298e+02, 1.70283528e+02, 1.71911168e+02,
       1.73554366e+02, 1.75213270e+02, 1.76888030e+02, 1.78578799e+02,
       1.80285729e+02, 1.82008974e+02, 1.83748691e+02, 1.85505037e+02,
       1.87278170e+02, 1.89068252e+02, 1.90875444e+02, 1.92699910e+02,
       1.94541816e+02, 1.96401326e+02, 1.98278611e+02, 2.00173840e+02,
       2.02087184e+02, 2.04018816e+02, 2.05968912e+02, 2.07937648e+02,
       2.09925202e+02, 2.11931753e+02, 2.13957484e+02, 2.16002578e+02,
       2.18067220e+02, 2.20151596e+02, 2.22255896e+02, 2.24380309e+02,
       2.26525028e+02, 2.28690248e+02, 2.30876164e+02, 2.33082973e+02,
       2.35310876e+02, 2.37560074e+02, 2.39830771e+02, 2.42123173e+02,
       2.44437486e+02, 2.46773920e+02, 2.49132687e+02, 2.51514000e+02,
       2.53918074e+02, 2.56345128e+02, 2.58795380e+02, 2.61269053e+02,
       2.63766370e+02, 2.66287558e+02, 2.68832844e+02, 2.71402459e+02,
       2.73996635e+02, 2.76615608e+02, 2.79259614e+02, 2.81928892e+02,
       2.84623685e+02, 2.87344235e+02, 2.90090790e+02, 2.92863597e+02,
       2.95662908e+02, 2.98488976e+02, 3.01342056e+02, 3.04222408e+02,
       3.07130291e+02, 3.10065969e+02, 3.13029707e+02, 3.16021774e+02,
       3.19042440e+02, 3.22091979e+02, 3.25170667e+02, 3.28278782e+02,
       3.31416606e+02, 3.34584423e+02, 3.37782518e+02, 3.41011183e+02,
       3.44270708e+02, 3.47561390e+02, 3.50883525e+02, 3.54237414e+02,
       3.57623361e+02, 3.61041672e+02, 3.64492657e+02, 3.67976628e+02,
       3.71493901e+02, 3.75044792e+02, 3.78629625e+02, 3.82248723e+02,
       3.85902414e+02, 3.89591028e+02, 3.93314899e+02, 3.97074365e+02,
       4.00869766e+02, 4.04701444e+02, 4.08569747e+02, 4.12475025e+02,
       4.16417631e+02, 4.20397922e+02, 4.24416259e+02, 4.28473004e+02,
       4.32568526e+02, 4.36703194e+02, 4.40877383e+02, 4.45091471e+02,
       4.49345838e+02, 4.53640871e+02, 4.57976957e+02, 4.62354490e+02,
       4.66773864e+02, 4.71235481e+02, 4.75739744e+02, 4.80287061e+02,
       4.84877842e+02, 4.89512504e+02, 4.94191466e+02, 4.98915152e+02,
       5.03683989e+02, 5.08498408e+02, 5.13358845e+02, 5.18265740e+02,
       5.23219538e+02, 5.28220686e+02, 5.33269636e+02, 5.38366847e+02,
       5.43512779e+02, 5.48707898e+02, 5.53952675e+02, 5.59247582e+02,
       5.64593101e+02, 5.69989715e+02, 5.75437911e+02, 5.80938184e+02,
       5.86491030e+02, 5.92096953e+02, 5.97756460e+02, 6.03470062e+02,
       6.09238278e+02, 6.15061628e+02, 6.20940640e+02, 6.26875847e+02,
       6.32867784e+02, 6.38916995e+02, 6.45024027e+02, 6.51189433e+02,
       6.57413769e+02, 6.63697601e+02, 6.70041496e+02, 6.76446029e+02,
       6.82911779e+02, 6.89439331e+02, 6.96029276e+02, 7.02682210e+02,
       7.09398736e+02, 7.16179462e+02, 7.23025000e+02, 7.29935971e+02,
       7.36913000e+02, 7.43956718e+02, 7.51067762e+02, 7.58246777e+02,
       7.65494413e+02, 7.72811323e+02, 7.80198172e+02, 7.87655628e+02,
       7.95184365e+02, 8.02785065e+02, 8.10458415e+02, 8.18205110e+02,
       8.26025852e+02, 8.33921347e+02, 8.41892311e+02, 8.49939465e+02,
       8.58063536e+02, 8.66265261e+02, 8.74545381e+02, 8.82904646e+02,
       8.91343812e+02, 8.99863644e+02, 9.08464911e+02, 9.17148393e+02,
       9.25914875e+02, 9.34765151e+02, 9.43700021e+02, 9.52720295e+02,
       9.61826788e+02, 9.71020325e+02, 9.80301737e+02, 9.89671865e+02,
       9.99131556e+02, 1.00868167e+03, 1.01832306e+03, 1.02805661e+03,
       1.03788320e+03, 1.04780372e+03, 1.05781906e+03, 1.06793013e+03,
       1.07813784e+03, 1.08844313e+03, 1.09884692e+03, 1.10935015e+03,
       1.11995377e+03, 1.13065875e+03, 1.14146606e+03, 1.15237666e+03,
       1.16339155e+03, 1.17451172e+03, 1.18573819e+03, 1.19707197e+03,
       1.20851407e+03, 1.22006555e+03, 1.23172744e+03, 1.24350080e+03,
       1.25538669e+03, 1.26738619e+03, 1.27950039e+03, 1.29173038e+03,
       1.30407727e+03, 1.31654218e+03, 1.32912623e+03, 1.34183057e+03,
       1.35465634e+03, 1.36760470e+03, 1.38067683e+03, 1.39387391e+03,
       1.40719713e+03, 1.42064770e+03, 1.43422684e+03, 1.44793577e+03,
       1.46177573e+03, 1.47574799e+03, 1.48985380e+03, 1.50409443e+03,
       1.51847119e+03, 1.53298536e+03, 1.54763826e+03, 1.56243123e+03,
       1.57736559e+03, 1.59244270e+03, 1.60766392e+03, 1.62303064e+03,
       1.63854423e+03, 1.65420611e+03, 1.67001770e+03, 1.68598041e+03,
       1.70209571e+03, 1.71836504e+03, 1.73478988e+03, 1.75137172e+03,
       1.76811205e+03, 1.78501239e+03, 1.80207428e+03, 1.81929925e+03,
       1.83668886e+03, 1.85424469e+03, 1.87196832e+03, 1.88986137e+03,
       1.90792544e+03, 1.92616218e+03, 1.94457323e+03, 1.96316026e+03,
       1.98192495e+03, 2.00086901e+03, 2.01999414e+03, 2.03930208e+03,
       2.05879457e+03, 2.07847337e+03, 2.09834028e+03, 2.11839708e+03,
       2.13864559e+03, 2.15908765e+03, 2.17972509e+03, 2.20055980e+03,
       2.22159366e+03, 2.24282857e+03, 2.26426645e+03, 2.28590924e+03,
       2.30775890e+03, 2.32981741e+03, 2.35208677e+03, 2.37456898e+03,
       2.39726609e+03, 2.42018015e+03, 2.44331323e+03, 2.46666742e+03,
       2.49024484e+03, 2.51404763e+03, 2.53807793e+03, 2.56233793e+03,
       2.58682981e+03, 2.61155579e+03, 2.63651812e+03, 2.66171905e+03,
       2.68716085e+03, 2.71284584e+03, 2.73877634e+03, 2.76495469e+03,
       2.79138327e+03, 2.81806446e+03, 2.84500068e+03, 2.87219437e+03,
       2.89964799e+03, 2.92736402e+03, 2.95534497e+03, 2.98359337e+03,
       3.01211179e+03, 3.04090279e+03, 3.06996899e+03, 3.09931302e+03,
       3.12893753e+03, 3.15884521e+03, 3.18903875e+03, 3.21952090e+03,
       3.25029440e+03, 3.28136206e+03, 3.31272667e+03, 3.34439107e+03,
       3.37635814e+03, 3.40863076e+03, 3.44121186e+03, 3.47410438e+03,
       3.50731130e+03, 3.54083563e+03, 3.57468039e+03, 3.60884866e+03,
       3.64334352e+03, 3.67816810e+03, 3.71332555e+03, 3.74881904e+03,
       3.78465180e+03, 3.82082706e+03, 3.85734810e+03, 3.89421822e+03,
       3.93144076e+03, 3.96901909e+03, 4.00695661e+03, 4.04525675e+03,
       4.08392298e+03, 4.12295880e+03, 4.16236774e+03, 4.20215337e+03,
       4.24231928e+03, 4.28286912e+03, 4.32380654e+03, 4.36513527e+03,
       4.40685903e+03, 4.44898160e+03, 4.49150680e+03, 4.53443847e+03,
       4.57778050e+03, 4.62153682e+03, 4.66571137e+03, 4.71030816e+03,
       4.75533123e+03, 4.80078464e+03, 4.84667252e+03, 4.89299901e+03,
       4.93976831e+03, 4.98698465e+03, 5.03465230e+03, 5.08277558e+03,
       5.13135885e+03, 5.18040649e+03, 5.22992295e+03, 5.27991271e+03,
       5.33038029e+03, 5.38133026e+03, 5.43276723e+03, 5.48469586e+03,
       5.53712084e+03, 5.59004692e+03, 5.64347889e+03, 5.69742159e+03,
       5.75187989e+03, 5.80685873e+03, 5.86236308e+03, 5.91839796e+03,
       5.97496844e+03, 6.03207965e+03, 6.08973675e+03, 6.14794497e+03,
       6.20670956e+03, 6.26603584e+03, 6.32592920e+03, 6.38639503e+03,
       6.44743883e+03, 6.50906610e+03, 6.57128244e+03, 6.63409346e+03,
       6.69750486e+03, 6.76152237e+03, 6.82615179e+03, 6.89139896e+03,
       6.95726979e+03, 7.02377024e+03, 7.09090633e+03, 7.15868413e+03,
       7.22710979e+03, 7.29618948e+03, 7.36592946e+03, 7.43633605e+03,
       7.50741561e+03, 7.57917459e+03, 7.65161946e+03, 7.72475679e+03,
       7.79859320e+03, 7.87313536e+03, 7.94839003e+03, 8.02436402e+03,
       8.10106420e+03, 8.17849751e+03, 8.25667095e+03, 8.33559162e+03,
       8.41526664e+03, 8.49570322e+03, 8.57690865e+03, 8.65889028e+03,
       8.74165552e+03, 8.82521186e+03, 8.90956687e+03, 8.99472818e+03,
       9.08070350e+03, 9.16750061e+03, 9.25512735e+03, 9.34359167e+03,
       9.43290157e+03, 9.52306513e+03, 9.61409051e+03, 9.70598595e+03,
       9.79875976e+03, 9.89242034e+03, 9.98697617e+03, 1.00824358e+04,
       1.01788079e+04, 1.02761011e+04, 1.03743243e+04, 1.04734864e+04,
       1.05735963e+04, 1.06746631e+04, 1.07766959e+04, 1.08797040e+04,
       1.09836967e+04, 1.10886834e+04, 1.11946736e+04, 1.13016769e+04,
       1.14097030e+04, 1.15187616e+04, 1.16288627e+04, 1.17400161e+04,
       1.18522321e+04, 1.19655206e+04, 1.20798920e+04, 1.21953565e+04,
       1.23119248e+04, 1.24296072e+04, 1.25484145e+04, 1.26683574e+04,
       1.27894468e+04, 1.29116936e+04, 1.30351089e+04, 1.31597039e+04,
       1.32854897e+04, 1.34124779e+04, 1.35406799e+04, 1.36701073e+04,
       1.38007718e+04, 1.39326853e+04, 1.40658596e+04, 1.42003069e+04,
       1.43360393e+04, 1.44730691e+04, 1.46114086e+04, 1.47510705e+04,
       1.48920673e+04, 1.50344118e+04, 1.51781169e+04, 1.53231956e+04,
       1.54696610e+04, 1.56175264e+04, 1.57668051e+04, 1.59175108e+04,
       1.60696569e+04, 1.62232573e+04, 1.63783259e+04, 1.65348767e+04,
       1.66929238e+04, 1.68524817e+04, 1.70135646e+04, 1.71761873e+04,
       1.73403644e+04, 1.75061107e+04, 1.76734413e+04, 1.78423713e+04,
       1.80129161e+04, 1.81850910e+04, 1.83589115e+04, 1.85343936e+04,
       1.87115530e+04, 1.88904057e+04, 1.90709680e+04, 1.92532561e+04,
       1.94372867e+04, 1.96230763e+04, 1.98106417e+04, 2.00000000e+04};

    /**
     * a static IIR filter
     * @tparam FloatType
     */
    template<typename FloatType>
    class Filter {
    public:
        Filter() = default;

        void reset();

        void prepare(const juce::dsp::ProcessSpec &spec);

        void process(juce::AudioBuffer<FloatType> &buffer);

        void setFreq(FloatType x, bool update = true);

        inline FloatType getFreq() { return static_cast<FloatType>(freq.load()); }

        void setGain(FloatType x, bool update = true);

        inline FloatType getGain() { return static_cast<FloatType>(gain.load()); }

        void setQ(FloatType x, bool update = true);

        inline FloatType getQ() { return static_cast<FloatType>(q.load()); }

        void setFilterType(FilterType x, bool update = true);

        inline FilterType getFilterType() { return filterType.load(); }

        void setOrder(size_t x, bool update = true);

        inline size_t getOrder() { return order.load(); }

        void addDBs(std::array<FloatType, frequencies.size()> &x, FloatType scale = 1.0);

        void addGains(std::array<FloatType, frequencies.size()> &x, FloatType scale = 1.0);

        inline std::array<FloatType, frequencies.size()> &getDBs() { return dBs; }

        inline std::array<FloatType, frequencies.size()> &getGains() { return gains; }

        inline juce::ReadWriteLock &getMagLock() { return magLock; }

        void updateDBs();

    private:
        std::vector<juce::dsp::ProcessorDuplicator<juce::dsp::IIR::Filter<FloatType>, juce::dsp::IIR::Coefficients<FloatType>>> filters;
        std::atomic<double> freq = 1000, gain = 0, q = 0.707;
        std::atomic<size_t> order = 2;
        std::atomic<FilterType> filterType = FilterType::peak;
        juce::dsp::ProcessSpec processSpec{48000, 512, 2};
        juce::ReadWriteLock paraUpdateLock;

        std::array<FloatType, frequencies.size()> dBs{}, gains{};
        juce::ReadWriteLock magLock;
        std::atomic<bool> magOutdated = false;

        void updateParas();
    };
}

#endif //ZLEQUALIZER_SINGLE_FILTER_HPP
